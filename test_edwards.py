import sys
sys.path += ['elliptic-curves-finite-fields']

from finitefield.finitefield import FiniteField
from edwards import *
from edwards_proj import *
from edwards_ext import *


# the order of jubjub base field
q = 0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001
Fq = FiniteField(q, 1)

dd = -(Fq(10240)/Fq(10241))


curve = TwistedEdwardsCurve(Fq(-1), dd)
p1 = Point(curve, 0,1)
p2 = Point(curve, 5, 6846412461894745224441235558443359243034138132682534265960483512729196124138)
p3 = Point(curve, 10, 9069365299349881324022309154395348339753339814197599672892180073931980134853)
p4 = Point(curve, 20, 19591689915777126424527574975649725331665833659101192930707046924393354292087)
p5 = Point(curve, 21, 7077199607858622853608570958787827897736274549921838431359778037825087697958)
p6 = Point(curve, 28, 6872713299796450981547816838430986612693130632041108310621050902354381807248)


curve2 = ProjectiveEdwards(Fq(-1), dd)
p21 = Point(curve2, 0, 1)
p22 = Point(curve2, 5, 6846412461894745224441235558443359243034138132682534265960483512729196124138)
p23 = Point(curve2, 10, 9069365299349881324022309154395348339753339814197599672892180073931980134853)
p24 = Point(curve2, 20, 19591689915777126424527574975649725331665833659101192930707046924393354292087)
p25 = Point(curve2, 21, 7077199607858622853608570958787827897736274549921838431359778037825087697958)
p26 = Point(curve2, 28, 6872713299796450981547816838430986612693130632041108310621050902354381807248)

# x3 = 95647783517073415735403163941479228545055424626155507223741889929504517458228507111657178597635302594198725203478833970460279648130849751324645866545811137923104096797553297077392531073030168596957661466040693787972939905764161880
# y3 = -273388283281388960666964237208542880879054745878983498516033077570326937252459937275145084132251912748852007759185651243331920129591616180753763273646480514560385825489976385560656764553674734537246444999757072459523822550332256196383061483258062197583461044532820796631212321997057036516153043481813300369
# z3 = 273388283281388960666964237208542880879054745878983498516033077570326937252459937275145084132251912748852007759185651243331920129591616180753763273646462737134940241823050882951942740218119273314663912512852271116585460049612082737626926110161891270313260440458174452617793556684667258406450437144643136063
# print "x/z: ", x3*(Fq(z3).inverse())
# print "y/z: ", y3*(Fq(z3).inverse())


curve3 = ExtendedEdwards(Fq(-1), dd)
p31 = Point(curve3, 0, 1)
p32 = Point(curve3, 5, 6846412461894745224441235558443359243034138132682534265960483512729196124138)
p33 = Point(curve3, 10, 9069365299349881324022309154395348339753339814197599672892180073931980134853)
p34 = Point(curve3, 20, 19591689915777126424527574975649725331665833659101192930707046924393354292087)
p35 = Point(curve3, 21, 7077199607858622853608570958787827897736274549921838431359778037825087697958)
p36 = Point(curve3, 28, 6872713299796450981547816838430986612693130632041108310621050902354381807248)

points3 = [p31, p32, p33, p34, p35, p36]

for i in points3:
	print i, curve3.testPoint(i.x, i.y)


print "=" * 30
print "asdas "
print -p3
print -p23
print -p33

print "=" * 30
print p1 - p2
print p21 - p22
print p31 - p32

print "=" * 30
print p5 + p4
print p25 + p24
print p35 + p34

print "=*" * 30
print p6.double()
print p26.double()
print p36.double()

print "=" * 30
print p2 * 6
print p22 * 6
print p32 * 6


print "=" * 30
print 3 * p5 + 6 * p5
print 9 * p5
print 3 * p25 + 6 * p25
print 9 * p25
print 3 * p35 + 6 * p35
print 9 * p35